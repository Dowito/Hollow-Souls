{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2058{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green255\blue255;\red0\green255\blue0;\red255\green255\blue0;\red255\green0\blue0;}
{\*\generator Riched20 10.0.22000}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\b\f0\fs22\lang10 Hollow Souls:\par

\pard\sa200\sl276\slmult1\highlight1 Azul \highlight0  \b0 No tengo claro\par
\highlight2 Verde\highlight0  Cosas que se relacionan con una clase pero se hacen en otra.\par
\highlight3 Amarillo \highlight0 Ideas sueltas.\b\par
Clases:\par
Principales:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 TheBox: \b0 caja de pruebas, en esta clase habran botones y todo tipo de metodos para hacer pruebas a todos los objetos que se vayan creando para ajustar parametros y que funcionen correctamente. sera una varibale tipo mainwindow y tendra su propio archivo ui. Tendra una interfaz donde se pueda cambiar dicho parametros en tiempo real.\b\par
{\pntext\f1\'B7\tab}Game\b0 : sera un graphicsview que contendra todo los elementos que interactuan del juego.\par
{\pntext\f1\'B7\tab}\b Map\b0 : sera un QGraphicsScene la cual estara encargada de cargar los distintos mapas del juego cuando sea necesario.\par
{\pntext\f1\'B7\tab}\b Hada: \b0 Servira para guardar la partida. estara repartida entre los distintos escenarios\par
{\pntext\f1\'B7\tab}\b Sprites: \b0 clase principal de la cual heredaran todas las demas clases que tendran sprites. En esta solo estara lo neccesario para manejar sprites.\par
{\pntext\f1\'B7\tab}\b Motion: \b0 clase la cual heredara objeto, sera una clase que le dara la propiedad de movimiento a las demas clases que lo requieran a la vez que les da sprites. Ej: Player, Enemy,  Arrow etc.\par
{\pntext\f1\'B7\tab}\b Health bar: \b0 barra de salud el personaje. disminuira cuando reciba da\'f1o.\par
{\pntext\f1\'B7\tab}\b Potion: \b0 Objeto usable, cura al personaje.\b  \b0\par
{\pntext\f1\'B7\tab}\b Equip Interface: \b0 Interfaz que mostrara que arma tiene equipada el personaje en todo momento, la cantidad de flechas y la cantidad de pociones.\par
{\pntext\f1\'B7\tab}\b Player: \b0 heredara de la clase Move, la cual le dara movimiento y sprites a la vez. Clase del personaje que tendra el foco.\par
{\pntext\f1\'B7\tab}\b Enemy:\b0  clase de los enemigos que tendra que matar. Hare varios tipos de enemigos y bosses, hasta habra un tipo de enemigo con movimiento senoidal. Cada tipo de enemigo tendra su propia animacion de ataque si lo requiere\par
{\pntext\f1\'B7\tab}\b Block: \b0 Clase que seran bloques impenetables, constuitiran todo lo que sera piso, paredes y demas obstaculos parecidos. Algunos bloques podran tener movimiento y otros seran pinchos que da\'f1an al jugador.\par
{\pntext\f1\'B7\tab}\b Saw: \b0 Sierra que supondran un obstaculo al jugador, pueden ser de distintos tama\'f1os, se moveran por el mapa y haran todo tipo de recorridos. Giraran sobresimismas haciendo un movimiento circular constante.\par
{\pntext\f1\'B7\tab}\b Pendulum: \b0 Pendulo, Existintiran dos tipo de pendulo, uno que al igual que los bloques, supondran una plataforma para el jugador, se aprovechara esto para hacer niveles mas creativos y satisfactorios de jugar. El otro tipo seran pendulo que hacen da\'f1o, por ejemplo hacer que un pendulo tendra una sierra pegada o sea una guillotina que le haran da\'f1o al jugador.\par
{\pntext\f1\'B7\tab}\b Rope: \b0 Cuerda de la cual colgara el pendulo.\par
{\pntext\f1\'B7\tab}\b Dash: \b0 Habilidad del jugador, si la tiene podra hacer un dash hacia la izquierda o derecha.\par
{\pntext\f1\'B7\tab}\b Weapon: \b0 ataque principal del jugador, tendra su propio hitbox (se refinara dicha hitbox si me da tiempo) hare distintos tipos de armas. Por defecto tendra una espada con una animacion predeterminada, los distintos tipos de arma tendran su propia animacion y hitbox.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Bow:  \b0 arma con la que se podran disparar flechas, tanto el jugador como alguno enemigos lo podran usar, habran arcos mas potentes que otros que disparen la flecha mas rapido.\par
{\pntext\f1\'B7\tab}\b Arrow: \b0 objeto que disparan los arcos, para el jugador tendran un limite de flechas las cuales se van recargando con el tiempo. Su trayectoria sera un movimiento parabolico y se podra activar palancas e interruptores disparandoles pegandoles con una flecha.\par

\pard\sa200\sl276\slmult1\b Florituras:\b0\par
Son clases, que si me da tiempo las hare para hacer el juego mucho mas divertido y jugable.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Stamina Bar: \b0 Igual que la de salud, pero esta disminuira cuando el personaje haga alguna accion como atacar o usar una habilidad especial.\b\par
{\pntext\f1\'B7\tab}Camera: \b0 camara que siempre centrara al jugador. Por defecto la cmara siempre estara centrada, pero con esta clase podre darle mas propiedades a dicha camara como por ejemplo una velocidad haciendo que el juego se vea mas suave y fluido como tambien posicionarla y darle foco a otro objetos que nos ean el jugador como tambien hacer zoom.\par
{\pntext\f1\'B7\tab}\b Invert Gravity: \b0 habilidad del jugador que invertira su propia gravedad.\par
{\pntext\f1\'B7\tab}\b Double Jump: \b0 Habilidad del jugador que le permitira hacer un doble salto.\par
{\pntext\f1\'B7\tab}\b Bomb: \b0 Poner una bomba, reciclar el codigo del bomberman.\par

\pard\sa200\sl276\slmult1\b Analisis y Dise\'f1o de Clases:\par
\cf4\highlight1 Game:\cf0\highlight0\par
\b0 Heredara de QGraphicsView, sera el view que se mostrara y contendra todos los elementos del juego que interactuan y sus respectivos contenedores.\cf4\b\par
\cf0 Propiedades:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 Mapa.\par
{\pntext\f1\'B7\tab}Personaje.\par
{\pntext\f1\'B7\tab}QVector<Bloques*> //es probable que este no sea necesario\par
{\pntext\f1\'B7\tab}QList<Enemies*> //es probable que este no sea necesario\par
{\pntext\f1\'B7\tab}QList<Saws*> //es probable que este no sea necesario\par
{\pntext\f1\'B7\tab}QList<Penduloms*>  //es probable que este no sea necesario\par

\pard\sa200\sl276\slmult1\b Funciones e Interacciones:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 Mostrar quitar escena.\par

\pard\sa200\sl276\slmult1\par
\cf4\highlight1\b Mapa:\cf0\highlight0\par
\b0 Mapa-escena del juego que se mostrara en pantalla, cada vez uqe haya una pantalla de carga sera el mapa que esta cargando uno nuevo con sus respectivos bloques, enemigos etc.\b\par
Funciones e Interacciones:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 Carga Escena n: Carga el escenario n respectivo.\b\par
{\pntext\f1\'B7\tab}\b0 Cargar partida: Carga el juego guardado.\b\par
{\pntext\f1\'B7\tab}\b0 Cargar pantalla de inicio.\b\par
{\pntext\f1\'B7\tab}\b0 Cargar Inventario.\b\par

\pard\sa200\sl276\slmult1\b0\par
\cf4\b Sprites: \cf0\par
\b0 Hereda de la clase QObeject y QGraphicsPixMap . tendra todo lo relacionado con el manejo de sprites.\b\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 Sprite: Sprites completo que contienes todos los frames de dicho objeto\b\par
{\pntext\f1\'B7\tab}\b0 Frame: frame que se muestra en pantalla.\b\par
{\pntext\f1\'B7\tab}\b0 Width: anchura //lo trae por defecto el rect de QGraphicsPixMap\b\par
{\pntext\f1\'B7\tab}\b0 Height: altura //lo trae por defecto el rect de QGraphicsPixMap\b\par

\pard\sa200\sl276\slmult1 Funciones\b0 :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 setFrame(typeX, typeY): recorta el frame a mostrar del sprite.\b\par
{\pntext\f1\'B7\tab}\b0 setSize(wX, hY): estable el tama\'f1o de los frames a recortar.\b\par

\pard\sa200\sl276\slmult1\b0\par
\cf4\b Motion:\par
\cf0\b0 Heredara la clase Sprites, Clase que le dara movimiento a los objetos creados.\par
\b Propiedades:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 QVector2D a: vector aceleracion\par
{\pntext\f1\'B7\tab}QVector2D v: vector velocidad\par
{\pntext\f1\'B7\tab}QVector2D r: vector posicion\par
{\pntext\f1\'B7\tab}aceleracion angular.\par
{\pntext\f1\'B7\tab}velocidad angular.\par
{\pntext\f1\'B7\tab}posicion angular.\par

\pard\sa200\sl276\slmult1\b Funciones:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 slot tryMove: revisara si se puede mover.\par
{\pntext\f1\'B7\tab}slot Move: hacer movimiento.\par

\pard\sa200\sl276\slmult1\par
\cf4\b Health Bar:\par
\cf0\b0 Heredara de la clase QGraphicsRectItem y QGraphicsTextItem, consistira en dos rectangulos que su ancho dependera de la cantidad de salud que tenga actualmente el personaje.\par
\b Propiedades:\cf4\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\cf0\b0 barHealth: rectangulo que su ancho dependera de cuanta salud le quede al personaje.\par
{\pntext\f1\'B7\tab}Health: cantidad de vida que le queda al personaje.\par
{\pntext\f1\'B7\tab}textHealth: texto que mostrara el porciento de vida que le queda al personaje, este texto estara superpuesto sobre barHealth.\par
{\pntext\f1\'B7\tab}barLoseHealth: rectangulo que dependera de la vida perdida del personaje.\par

\pard\sa200\sl276\slmult1\b Funciones e Interacciones:\par
\b0 Todas las funciones interactuaran directamente con el personaje, al momento de que el personaje reciba da\'f1o o se cure con una pocion se actualizara la HealthBar por medio de sus funciones\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b health: \b0 cantidad de vida.\par
{\pntext\f1\'B7\tab}\b healthMax: \b0 maxima cantidad de vida.\par
{\pntext\f1\'B7\tab}\b updateBarHealth: \b0 actualiza la barra de vida.\par
{\pntext\f1\'B7\tab}\b updateBarLoseHealth: \b0 actualiza la barra de vida perdida\par
{\pntext\f1\'B7\tab}\b increase(int cure): \b0 Incrementa la vida y actualiza las barras\par
{\pntext\f1\'B7\tab}\b decrease(int damage): \b0 decrementa la vida\b  \b0 y actualiza las barras\par

\pard\sa200\sl276\slmult1\par
\cf4\b Potion:\par
\cf0\b0 Heredara de la clase Sprites. Se podra recojer dicho item y se guardara en el inventario del personaje para su posterior uso,  recupera vida perdida del personaje.\par
\b Propiedades:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 pot: cantidad de vida que recupera al usarse.\b\par

\pard\sa200\sl276\slmult1 Funciones e Interacciones:\par
\b0 Interactua con el personaje y con la HealthBar\b\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 animation: \b0 animacion que se activa al usarce.\b\par
{\pntext\f1\'B7\tab}cure: \b0 Cura/incrementa la vida del personaje/HealthBar. \highlight1 //es probable que la ponga mejor en personaje.\highlight0\b\par

\pard\sa200\sl276\slmult1\par
\cf4 Player:\cf0\par
\b0 Sera manejado por el usuario, tendra el focus del teclado.\par
Heredara Motion.\par
\b Propiedades:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 bool state: si esta vivo o muerto, creo que QGraphicsPixMap ya tiene algo asi.\b\par
{\pntext\f1\'B7\tab}\b0 HealthBar health: sera la barra de vida del personaje.\b\par
{\pntext\f1\'B7\tab}\b0 Weapon weapon: arma equipada.\b\par
{\pntext\f1\'B7\tab}\b0 int flechas: cantidad de flechas que tiene actualmente.\b\par
{\pntext\f1\'B7\tab}\b0 Bool arco: si tiene arco.\b\par
{\pntext\f1\'B7\tab}\b0 Bool dash: si tiene el dash.\b\par
{\pntext\f1\'B7\tab}\b0 Bool invertGravity: si tiene invertir gravedad\b\par
{\pntext\f1\'B7\tab}\b0 Bool inmu: si es inmune al da\'f1o o no. despues de decibir un da\'f1o o de hacer un dash, por algunos segundos sera inmune, algunos objetos no le podran hacer da\'f1o.\b\par
{\pntext\f1\'B7\tab}\b0 int potions: cantidad de posiones.\b\par

\pard\sa200\sl276\slmult1 Funciones e Interacciones:\par
\b0 PLayer interactuara con los enemigos, bloques, sierras y pendulos lo cuales le podran hacer da\'f1o, las pociones las podra recojer y utilizar, interactuar y activar los efectos de las distintas habilidades, atacar con el arma equipada, disparar un arco.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 dieAnimation: animacion de muerte.\par
{\pntext\f1\'B7\tab}cure(Potion): Usa una pocion para curarce. esto modifica la barra de vida del personaje.\b\par
{\pntext\f1\'B7\tab}\b0 attack(Weapon): ataca con el arma equipada.\b\par
{\pntext\f1\'B7\tab}\b0 damage(Enemy, Block, Saw, Pendulum, arrow): recibe da\'f1o que disminuye su barra de vida y le da frames de invulnerabilidad.\b\par
{\pntext\f1\'B7\tab}\b0  getPotion(): recoge una posicion del piso.\b\par
{\pntext\f1\'B7\tab}\b0 shoot(Bow): usa un arco para disparar una flecha\b\par
{\pntext\f1\'B7\tab}\b0 dash(Dash): realiza un dash y le da frames de invulnerabilidad contra ciertos objetos.\b\par
{\pntext\f1\'B7\tab}\b0 doubleJump(DoubleJump):\b\par
{\pntext\f1\'B7\tab}\b0 invert(InvertGravity): invierte la gravedad.\b\par

\pard\sa200\sl276\slmult1\cf4\b0 Enemigo:\par
\cf0 Heredara la Clase Motion.\par
Sera una clase muy parecida a personaje, habran distintos tipos de enemigos, desde voladores a enemigos que solo se mueven por el piso como tambien cada enemigo atacara de manera distinta, por ejemplo un tipo enemigo al atacar hara un salto. Tambien estos al recibir un ataque saltaran hacia atras como feedback.\par
\b Propiedades:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 HealthBar health: la misma que el jugador pero mas peque\'f1a y dicha posicion se ira actualizando con la posicion del mismo enemigo.\b\par
{\pntext\f1\'B7\tab}\b0 bool fly: si es volador o no.\b\par
{\pntext\f1\'B7\tab}\b0 bool state: si esta vivo o muerto.\b\par
{\pntext\f1\'B7\tab}\b0 bool jump: si puede saltar o no.\b\par
{\pntext\f1\'B7\tab}\b0 resist knout: resistencia al retroceso al recibir un ataque.\b\par
{\pntext\f1\'B7\tab}\b0 Bow bow: si tiene arco aqui estara equipado y podra dispararlo, habran alguno enemigos que estaran en posiciones altas y estos sabran la posicion del jugador y deacuerdo a eso calcularan la trayectoria de la flecha disparar para acertarle al jugador. Como hay arcos de distintas potencias, algunos enemigos con arco seran realmente letales.\b\par

\pard\sa200\sl276\slmult1 Interacciones:\par
\b0 Podra interaccionar con el arco, con el personaje, con las armas, con los bloques, las sierras, los pendulos y las flechas.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 dieAnimation: animacion que se activa al perder toda la vida.\par
{\pntext\f1\'B7\tab}damage(Enemy, Block, Saw, Pendulum, arrow)\b\par
{\pntext\f1\'B7\tab}\b0 shoot(bow)\b\par
{\pntext\f1\'B7\tab}\b0 attack(Player): ataca al jugador cuando esta en el rango, los ataques de cada tipo de enemigo seran distintos.\b\par
{\pntext\f1\'B7\tab}\b0 knockout(): al recibir un ataque este hara un movimiento hacia atras.\b\par
{\pntext\f1\'B7\tab}bloque, esto se manera en movimiento.\par

\pard\sa200\sl276\slmult1\par
\cf4 Block:\par
\cf0\b0 Pueden paredes o bloques, tambien podran ser pinchos que da\'f1an al jugador al contacto y algunos tendran la propiedad de moverse, podran heredar a Sprites o a QGraphicsRectItem y a motion si es que son bloques moviles.\par
Las paredes no dejaran que el jugador se muevan en x, los bloques no dejaran que se mueve en y. Los pinchos le haran da\'f1o al jugador y lo devolveran al inicio del escenario.\par
\b Propiedades:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 tipo: pared, pincho, bloque.\b\par
{\pntext\f1\'B7\tab}\b0 bool move\b\par

\pard\sa200\sl276\slmult1 Funciones e interacciones:\par
\b0 Interactuan con los enemigos y con el jugador.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 doDamage(personaje, enemigo): le hace da\'f1o al jugador o al enemigo si es un pincho\b\par
{\pntext\f1\'B7\tab}\b0 noMove(personaje, enemigo, flechas): no le permite el movmiento al enemigo, a las flechas y al jugador si estos interactuan dependiendo de la velocidad. \highlight2 Esto se hara dentro de la funcion movimiento tanto del jugdor como del enemigo. si una flecha choca con un bloque esta se destruye.\highlight0\b\par

\pard\sa200\sl276\slmult1\par
\cf4 Bow:\par
\cf0\b0 Heredara la clase Sprites, aunque lo mas eguro es no tenga sprites.\cf4\b\par
\cf0 Propiedades:\cf4\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\cf0\b0 pot: potencia de disparo. Velocidad inicial de la flecha.\par
{\pntext\f1\'B7\tab}angle: angulo con el que saldra el disparo. Esto lo calcularan los enemigos, para el jugador tendra un angulo predeterminado.\par

\pard\sa200\sl276\slmult1\b Funciones e Interacciones: \par
\highlight2\b0 El arco interactuara con el enemigo y el jugador, ya que ellos son los lo que lo usaran.\highlight0  Tambien interactua con las flecha, el arco es el que las crea.\highlight2\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\highlight1 shoot(arrow):\par
{\pntext\f1\'B7\tab}shoot(personaje, enemigo): jugador o enemigo dispara el arco\par

\pard\sa200\sl276\slmult1\par
\highlight0\b Arrow:\par
\b0 Heredara la clase motion.\par
La flecha al ser dispara tendra una velocidad inicial y una posicion inicial. \par
\b Propiedades:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 bool state.\b\par
{\pntext\f1\'B7\tab}\b0 bool type: si es dispara por el enemigo o por el jugador. asi interactuara con uno o con otro\b\par
{\pntext\f1\'B7\tab}\b0 bool pierce: si atraviesa los bloques o no. hay que tener cuidado, ya que si atraviesa los bloques, se debera de eliminar de la escena cuando la sobrepase.\par

\pard\sa200\sl276\slmult1\b Funciones e Interacciones:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 destroyAnimation: animacion al destruirce contra un bloque.\par
{\pntext\f1\'B7\tab}damage(personaje, enemigo): hara da\'f1o al jugador o enemigo dependiendo quien la disparo.\par

\pard\sa200\sl276\slmult1\par
\cf4\b Weapon:\par
\cf0\b0 Arma que se equipara el jugador y podra atacar con ella.\par
\b Propiedades:\b0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 type: tipo del arma, dependiendo del tipo esta tendra una animacion de ataque predeterminada con su propio hitbox.\par
{\pntext\f1\'B7\tab}int atackSpeed: velocidad de ataque del arma, esto definira lo que dure la animacion de ataque, cuanto termine la animacion podra volver a atacar.\par
{\pntext\f1\'B7\tab}bool state: si esta disponible para usarse, estara disponible mientras no se este atacando con ella.\par
{\pntext\f1\'B7\tab}int knockout: cantidad que hace retroceder al enemigo.\par

\pard\sa200\sl276\slmult1\b Funciones e Interacciones:\par
\b0 El arma solo interactuara con los enemigos, \highlight1 lo mas probable es que esta interaccion se haga dentro del enemigo.\highlight0\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 doDamage(enemigo): le hace da\'f1o al enemigo y lo hace retroceder.\par
{\pntext\f1\'B7\tab}animacion: animacion de ataque tendra una u otra dependiendo del tipo de arma\highlight3 . talvez hacer que tambien interactue con las flechas y las destruya.\highlight0\par

\pard\sa200\sl276\slmult1\cf4\b Dash:\par
\cf0\b0 Heredara la clase Sprites.\cf4\b\par
\cf0\b0 Habilidad del personaje, al usarla este se movera rapidamente hacia una direccion. \par
\b Funciones e Interacciones\b0 :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 animacion();\par
{\pntext\f1\'B7\tab}\highlight1 use(Player):\highlight0  aumenta la velocidad del jugador hacia una direccion (izquierda o derecha) por un periodo de tiempo o hasta que choque con un bloque, bloqueandole el ingreso por teclado hasta que termine dicho aumento de velocidad. Mientras dure este efecto sera inmmune a lso enemigos y flechas que le disparen.\par

\pard\sa200\sl276\slmult1\par
\cf4 Saw:\par
\par
Pendulum:\cf0\par
\par
\par
\par
}
 